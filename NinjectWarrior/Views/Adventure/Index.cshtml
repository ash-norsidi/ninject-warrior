@model NinjectWarrior.Models.Player
@using NinjectWarrior.Models
@inject NinjectWarrior.Services.IStoryService StoryService
@inject NinjectWarrior.Repositories.IQuestRepository QuestRepository
@inject NinjectWarrior.Repositories.IPuzzleRepository PuzzleRepository

@{
    ViewBag.Title = "Fuzzy Ninject Warrior Adventure";
}

<h2>Welcome, @Model.Name the Warrior!</h2>
<p>Level: @Model.Level</p>
<p>Health: @Model.Health</p>
<p>Experience: @Model.Experience / @Model.ExperienceToNextLevel</p>
<p>Gold: @Model.Gold</p>

<hr />

@if (Model.CurrentGameState == GameState.Puzzle)
{
    var puzzle = PuzzleRepository.GetPuzzle(Model.ActivePuzzleId);
    if (puzzle != null)
    {
        <h3>Puzzle: @puzzle.Type</h3>
        <p>@puzzle.Prompt</p>   
        <form action="/Adventure/SolvePuzzle" method="post" class="terminal-window" style="display: flex; align-items: center; gap: 8px;">
            <input type="text" name="solution" />
            <button type="submit">Solve</button>
            @if (TempData["PuzzleMessage"] != null)
            {
                <span style="color: red; margin-left: 8px;">@TempData["PuzzleMessage"]</span>
            }
        </form>
        <div class="terminal-window">
            <h5>Hints:</h5>
            <ul>
                @foreach (var hint in puzzle.Hints)
                {
                    <li>@hint</li>
                }
            </ul>
        </div>        
    }
}
else if (Model.CurrentGameState == GameState.Battle)
{
    <div id="battle-section-container">
        @await Html.PartialAsync("_BattleSection", Model)
    </div>
}
else if (Model.CurrentGameState == GameState.Adventure)
{
    var mainQuest = StoryService.GetCurrentMainQuest(Model);
    if (mainQuest != null)
    {
        <h3>@mainQuest.Title</h3>
        <p>@mainQuest.Script</p>

        @if (Model.ActiveQuestId == mainQuest.Id)
        {
            <h4>Choices:</h4>
            <form action="/Adventure/ProcessQuestChoice" method="post" class="terminal-window">
                <input type="hidden" name="questId" value="@mainQuest.Id" />
                @foreach (var choice in mainQuest.Choices)
                {
                    <button type="submit" name="choiceId" value="@choice.Key">@choice.Value</button>
                }
            </form>
        }
    }
    else
    {
        <p>You have completed all the main quests!</p>
    }
    var subQuests = StoryService.GetAvailableSubQuests(Model);
    if (subQuests.Any())
    {
        <div class="terminal-window">
            <h3>Available Sub-Quests</h3>
            <p>These quests can be completed to gain additional experience and gold.</p>
            <h4>Available Sub-Quests:</h4>
            <ul>
                @foreach (var subQuest in subQuests)
                {
                    <li>@subQuest.Title</li>
                }
            </ul>
        </div>
    }
}